#!/bin/bash
set -e

# Make disk directory
mkdir -p build/disk

#python starcommand.py -a >build/temp.asm
#python tools/post_process.py <build/temp.asm >starcommand_acme.asm

python3 tools/text_compression.py --input source/sc_text.txt --output build/sc_text.a

function prepare_disk {
    local elk=$1
    local ssdname=$2
    acme --symbollist build/$2.symbols.txt -r build/$2.report.txt -Delk=$elk -o build/disk/STAR source/starcommand_acme.asm
    sort -o build/symbols.txt build/$2.symbols.txt

    # Find entry point in symbols
    entry_point=$(grep build/$2.symbols.txt -e '.*entry_point' | sed 's/.*\$\([0-9a-f][0-9a-f][0-9a-f][0-9a-f]\).*/\1/')

    # Create !BOOT file
    printf "*BASIC\rPAGE=&1900\r*FX21\rCLOSE#0:*RUN STAR\r" >build/disk/\!BOOT

    # Create INF file for !BOOT
    echo "$.!BOOT     FFFF1900 FFFF1900" >build/disk/\!BOOT.inf

    # Create INF file for STAR
    echo "$.STAR     FFFF1F00 FFFF$entry_point" >build/disk/STAR.inf

    # Create new SSD file with the appropriate files
    cp templates/EMPTY.ssd $ssdname.ssd
    cd build/disk
    python3 ../../tools/image.py -d ../../$ssdname.ssd -i !BOOT -i STAR
    cd ../..
}

prepare_disk 0 STAR2022
prepare_disk 1 STAR_ELK

if [ $USER == "tobynelson" ];
then
    # Open SSD in b2
    osascript -e 'quit app "b2 Debug"'
    sleep 1
    DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
    open -a 'b2 Debug' --args -0 "$DIR/STAR2022.SSD" -b
else
    # Open SSD in BeebEm
    open STAR2022.SSD
fi
